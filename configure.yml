
- name: Ensure PostgreSQL is started on boot
  service: name=postgresql-{{ postgresql_version }} enabled=yes

- name: Configure PostgreSQL database connection for XWiki
  template:
    src: templates/hibernate.cfg.xml.j2
    dest: "{{ xwiki_path }}/webapps/ROOT/WEB-INF/hibernate.cfg.xml"
    owner: "{{ xwiki_user }}"
    group: "{{ xwiki_group }}"
    mode: 0600
  notify: Restart tomcat-xwiki

# - name: Generate random xwiki.authentication.validationKey
#   command: openssl rand -base64 32
#   register: validationKey

# - name: Generate random xwiki.authentication.encryptionKey
#   command: openssl rand -base64 32
#   register: encryptionKey

- name: Configure Xwiki (properties file)
  template:
    src: templates/xwiki.properties.j2
    dest: "{{ xwiki_path }}/webapps/ROOT/WEB-INF/xwiki.properties"
    owner: "{{ xwiki_user }}"
    group: "{{ xwiki_group }}"
    mode: 0600
  notify: Restart tomcat-xwiki

- name: Configure Xwiki (cfg file)
  template:
    src: templates/xwiki.cfg.j2
    dest: "{{ xwiki_path }}/webapps/ROOT/WEB-INF/xwiki.cfg"
    owner: "{{ xwiki_user }}"
    group: "{{ xwiki_group }}"
    mode: 0600
  notify: Restart tomcat-xwiki

- name: Ensure libsemanage-python is installed
  yum: name=libsemanage-python state=present
  when: ansible_os_family == "RedHat" and ansible_selinux.status == "enabled"

- name: Ensure libsemanage-python is installed
  apt: name=libsemanage-python state=present
  when: ansible_os_family == "Debian" and ansible_selinux.status == "enabled"

- name: Set (httpd_can_network_connect) flag on and keep it persistent across reboots
  seboolean: name=httpd_can_network_connect state=yes persistent=yes
  when: ansible_selinux.status == "enabled"
  when: apache_service

- name: Allow access to XWiki Tomcat instance only to the XWiki user
  file: path="{{xwiki_tomcat_path}}" owner="{{xwiki_user}}" group="{{xwiki_user}}" mode=0770

- name: Cronjob to prune old xwiki filesystem backups
  cron:
    name: "XWiki filesystem backup prune"
    state: present
    minute: "0"
    hour: "5"
    user: "{{ xwiki_user }}"
    job: "/usr/local/bin/duply xwiki purge --force >> /var/log/duply/xwiki.log 2>&1"
    cron_file: "xwiki-purge"
  when: backup_service

- name: Ensure operators receive local root emails
  lineinfile: "dest=/etc/aliases regexp='^root: ' line='root: {{ administrator_email }}' state=present"
  notify: New mail aliases
  when: postfix_service

- name: Ensure the collectd.d directory is present
  file:
    path: "/etc/collectd.d"
    state: directory
    owner: root
    group: root
  when: monitoring_service

- name: Copy configuration files for collectd
  template:
    src: templates/collectd/{{ item }}.conf.j2
    dest: "/etc/collectd.d/{{ item }}.conf"
    owner: root
    group: root
    mode: 0600
  with_items:
    - aggregation
    - chains
    - df
    - interface
    - plugins
    - postgresql
    - tail
  notify: Restart collectd service
  when: monitoring_service

- name: Copy configuration files for Riemann
  template:
    src: templates/riemann/{{ item }}.clj.j2
    dest: "{{ riemann_conf_dir }}/conf.d/{{ item }}.clj"
    owner: root
    group: root
  with_items:
    - helpers
    - thresholds
    - setup
  notify: restart riemann
  when: monitoring_service
